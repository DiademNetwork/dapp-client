version: 2.0

references:

  environment: &environment
    environment:
      SUPPORT_CONTACT_EMAIL: "team@diadem.network"

  main_config: &main_config
    working_directory: ~/tmp
    docker:
      - image: circleci/node:10
        <<: *environment

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

  npm_cache_key: &npm_cache_key
    v1-dependency-npm-{{ checksum "package.json" }}

  npm_backup_cache_key: &npm_backup_cache_key
    v1-dependency-npm

  restore_node_modules: &restore_node_modules
    restore_cache:
      keys:
        - *npm_cache_key
        - *npm_backup_cache_key

  filter_branch_master: &filter_branch_master
    filters:
      branches:
        only:
          - master

  filter_ignore_gh_pages: &filter_ignore_gh_pages
    filters:
      branches:
        ignore:
          - gh-pages

jobs:
  checkout_code:
    <<: *main_config
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
  npm_dependencies:
    <<: *main_config
    steps:
      - *restore_repo
      - *restore_node_modules
      - run:
          name: Install NPM dependencies
          command: |
            if [ ! -d node_modules ]; then
              set -exu
              yarn install
            fi
      - save_cache:
          key: *npm_cache_key
          paths:
            - node_modules

  lint_and_unit_tests:
    <<: *main_config
    steps:
      - *restore_repo
      - *restore_node_modules
      - run:
          name: Lint check
          command: yarn lint
      - run:
          name: Unit tests
          command: yarn test

  deploy_staging:
    <<: *main_config
    steps:
      - *restore_repo
      - *restore_node_modules
      - run:
          name: Setup github known host
          command: |
            set -e
            if [ "${HOME}" = "/" ]; then
              export HOME=$(getent passwd $(id -un) | cut -d: -f6)
            fi
            mkdir -p ~/.ssh
            echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" >> ~/.ssh/known_hosts
            git config --global user.email ${GH_EMAIL}
            git config --global user.name ${GH_NAME}
      - run:
          name: Build & Deploy Staging
          command: |
            export BACKEND_URL="${BACKEND_URL_STAGING}"
            export GETSTREAM_APP_KEY="${GETSTREAM_APP_KEY_STAGING}"
            export GETSTREAM_APP_ID="${GETSTREAM_APP_ID_STAGING}"
            export GETSTREAM_ACHIEVEMENT_COMMON_TOKEN="${GETSTREAM_ACHIEVEMENT_COMMON_TOKEN_STAGING}"
            export SUPPORT_CONTACT_EMAIL="${SUPPORT_CONTACT_EMAIL}"
            export NODE_ENV="staging"
            yarn deploy

  deploy_production:
    <<: *main_config
    steps:
    - *restore_repo
    - *restore_node_modules
    - run:
        name: Build & Deploy Production
        command: |
          export BACKEND_URL="${BACKEND_URL_PRODUCTION}"
          export GETSTREAM_APP_KEY="${GETSTREAM_APP_KEY_PRODUCTION}"
          export GETSTREAM_APP_ID="${GETSTREAM_APP_ID_PRODUCTION}"
          export GETSTREAM_ACHIEVEMENT_COMMON_TOKEN="${GETSTREAM_ACHIEVEMENT_COMMON_TOKEN_PRODUCTION}"
          export SUPPORT_CONTACT_EMAIL="${SUPPORT_CONTACT_EMAIL}"
          export NODE_ENV="production"
          yarn deploy

workflows:
  version: 2
  deploy:
    jobs:
      - checkout_code:
          <<: *filter_ignore_gh_pages

      - npm_dependencies:
          <<: *filter_ignore_gh_pages
          requires:
            - checkout_code

      - lint_and_unit_tests:
          <<: *filter_ignore_gh_pages
          requires:
            - checkout_code
            - npm_dependencies

      - deploy_staging:
          <<: *filter_ignore_gh_pages
          requires:
            - checkout_code
            - npm_dependencies
            - lint_and_unit_tests

          # << : *filter_branch_master

      - deploy_production_hold:
          <<: *filter_ignore_gh_pages
          type: approval
          requires:
            - checkout_code
            - npm_dependencies
            - lint_and_unit_tests
            - deploy_staging
          # << : *filter_branch_master

      - deploy_production:
          <<: *filter_ignore_gh_pages
          requires:
            - deploy_production_hold
          # << : *filter_branch_master