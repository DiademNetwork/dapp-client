// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Users With users renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Users
    users={
      Array [
        Object {
          "userName": "A",
        },
        Object {
          "userName": "B",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(CardContent)>
        <WithStyles(Typography)
          color="textSecondary"
          paragraph={true}
        >
          All registered Diadem Network users
        </WithStyles(Typography)>
        <WithStyles(List)>
          <UserItem
            user={
              Object {
                "userName": "A",
              }
            }
          />
          <UserItem
            user={
              Object {
                "userName": "B",
              }
            }
          />
        </WithStyles(List)>
      </WithStyles(CardContent)>,
      "className": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Typography)
            color="textSecondary"
            paragraph={true}
          >
            All registered Diadem Network users
          </WithStyles(Typography)>,
          <WithStyles(List)>
            <UserItem
              user={
                Object {
                  "userName": "A",
                }
              }
            />
            <UserItem
              user={
                Object {
                  "userName": "B",
                }
              }
            />
          </WithStyles(List)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "All registered Diadem Network users",
            "color": "textSecondary",
            "paragraph": true,
          },
          "ref": null,
          "rendered": "All registered Diadem Network users",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <UserItem
                user={
                  Object {
                    "userName": "A",
                  }
                }
              />,
              <UserItem
                user={
                  Object {
                    "userName": "B",
                  }
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "function",
              "props": Object {
                "user": Object {
                  "userName": "A",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "function",
              "props": Object {
                "user": Object {
                  "userName": "B",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(CardContent)>
          <WithStyles(Typography)
            color="textSecondary"
            paragraph={true}
          >
            All registered Diadem Network users
          </WithStyles(Typography)>
          <WithStyles(List)>
            <UserItem
              user={
                Object {
                  "userName": "A",
                }
              }
            />
            <UserItem
              user={
                Object {
                  "userName": "B",
                }
              }
            />
          </WithStyles(List)>
        </WithStyles(CardContent)>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              color="textSecondary"
              paragraph={true}
            >
              All registered Diadem Network users
            </WithStyles(Typography)>,
            <WithStyles(List)>
              <UserItem
                user={
                  Object {
                    "userName": "A",
                  }
                }
              />
              <UserItem
                user={
                  Object {
                    "userName": "B",
                  }
                }
              />
            </WithStyles(List)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "All registered Diadem Network users",
              "color": "textSecondary",
              "paragraph": true,
            },
            "ref": null,
            "rendered": "All registered Diadem Network users",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <UserItem
                  user={
                    Object {
                      "userName": "A",
                    }
                  }
                />,
                <UserItem
                  user={
                    Object {
                      "userName": "B",
                    }
                  }
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "function",
                "props": Object {
                  "user": Object {
                    "userName": "A",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "function",
                "props": Object {
                  "user": Object {
                    "userName": "B",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Users Without users renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Users
    users={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(CardContent)>
        <WithStyles(Typography)
          color="textSecondary"
          paragraph={true}
        >
          All registered Diadem Network users
        </WithStyles(Typography)>
        <WithStyles(Typography)
          color="textPrimary"
        >
          <span
            data-qa-id="no-user-text"
          >
            No user registered
          </span>
        </WithStyles(Typography)>
      </WithStyles(CardContent)>,
      "className": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Typography)
            color="textSecondary"
            paragraph={true}
          >
            All registered Diadem Network users
          </WithStyles(Typography)>,
          <WithStyles(Typography)
            color="textPrimary"
          >
            <span
              data-qa-id="no-user-text"
            >
              No user registered
            </span>
          </WithStyles(Typography)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "All registered Diadem Network users",
            "color": "textSecondary",
            "paragraph": true,
          },
          "ref": null,
          "rendered": "All registered Diadem Network users",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <span
              data-qa-id="no-user-text"
            >
              No user registered
            </span>,
            "color": "textPrimary",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "No user registered",
              "data-qa-id": "no-user-text",
            },
            "ref": null,
            "rendered": "No user registered",
            "type": "span",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(CardContent)>
          <WithStyles(Typography)
            color="textSecondary"
            paragraph={true}
          >
            All registered Diadem Network users
          </WithStyles(Typography)>
          <WithStyles(Typography)
            color="textPrimary"
          >
            <span
              data-qa-id="no-user-text"
            >
              No user registered
            </span>
          </WithStyles(Typography)>
        </WithStyles(CardContent)>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              color="textSecondary"
              paragraph={true}
            >
              All registered Diadem Network users
            </WithStyles(Typography)>,
            <WithStyles(Typography)
              color="textPrimary"
            >
              <span
                data-qa-id="no-user-text"
              >
                No user registered
              </span>
            </WithStyles(Typography)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "All registered Diadem Network users",
              "color": "textSecondary",
              "paragraph": true,
            },
            "ref": null,
            "rendered": "All registered Diadem Network users",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <span
                data-qa-id="no-user-text"
              >
                No user registered
              </span>,
              "color": "textPrimary",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "No user registered",
                "data-qa-id": "no-user-text",
              },
              "ref": null,
              "rendered": "No user registered",
              "type": "span",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
